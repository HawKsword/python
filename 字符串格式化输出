Python format 格式化函数
Python2.6 开始，新增了一种格式化字符串的函数 str.format()，它增强了字符串格式化的功能。
基本语法是通过 {} 和 : 来代替以前的 % 。
format 函数可以接受不限个参数，位置可以不按顺序。
数字	      格式	    输出	      描述
3.1415926	{:.2f}	  3.14	  保留小数点后两位
3.1415926	{:+.2f}	  +3.14	  带符号保留小数点后两位
-1	      {:+.2f}	  -1.00	  带符号保留小数点后两位
2.71828	  {:.0f}	   3	    不带小数
5	        {:0>2d}	   05	    数字补零 (填充左边, 宽度为2)
5	        {:x<4d}	   5xxx	  数字补x (填充右边, 宽度为4)
10	      {:x<4d}	   10xx	  数字补x (填充右边, 宽度为4)
1000000	  {:,}	    1,000,000	以逗号分隔的数字格式
0.25	    {:.2%}	  25.00%	百分比格式
1000000000	{:.2e}	1.00e+09	指数记法
13	      {:10d}	    13	  右对齐 (默认, 宽度为10)
13	      {:<10d}	    13	  左对齐 (宽度为10)
13	      {:^10d}	    13	  中间对齐 (宽度为10)
11	
'{:b}'.format(11)
'{:d}'.format(11)
'{:o}'.format(11)
'{:x}'.format(11)
'{:#x}'.format(11)
'{:#X}'.format(11)	
1011
11
13
b
0xb
0XB	
^, <, > 分别是居中、左对齐、右对齐，后面带宽度， : 号后面带填充的字符，只能是一个字符，不指定则默认是用空格填充。
+ 表示在正数前显示 +，负数前显示 -；  （空格）表示在正数前加空格
b、d、o、x 分别是二进制、十进制、八进制、十六进制。
此外我们可以使用大括号 {} 来转义大括号



格式符为真实值预留位置，并控制显示的格式。格式符可以包含有一个类型码，用以控制显示的类型，如下:

%s    字符串 (采用str()的显示)

%r    字符串 (采用repr()的显示)

%c    单个字符

%b    二进制整数

%d    十进制整数

%i    十进制整数

%o    八进制整数

%x    十六进制整数

%e    指数 (基底写为e)

%E    指数 (基底写为E)

%f    浮点数

%F    浮点数，与上相同

%g    指数(e)或浮点数 (根据显示长度)

%G    指数(E)或浮点数 (根据显示长度)

%%    字符"%"

可以用如下的方式，对格式进行进一步的控制：

%[(name)][flags][width].[precision]typecode

(name)为命名

flags可以有+,-,' '或0。+表示右对齐。-表示左对齐。' '为一个空格，表示在正数的左侧填充一个空格，从而与负数对齐。0表示使用0填充。

width表示显示宽度

precision表示小数点后精度
